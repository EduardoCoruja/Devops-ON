name: pipeline

on:
  push:

  
jobs:
  build:
    runs-on: ubuntu-latest

        
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        
    - run: mvn test  
    
    - name: Generate JaCoCo Badge
      id: jacoco
      uses: cicirello/jacoco-badge-generator@v2.0.1
    - name: Log coverage percentage
      run: |
        echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
        echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"    
    
    - name: Upload JaCoCo coverage report
      uses: actions/upload-artifact@v2
      with:
        name: jacoco-report
        path: target/site/jacoco/

  code-analisys:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11    
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    #- name: Cache Maven packages
     # uses: actions/cache@v1
     # with:
     #   path: ~/.m2
     #   key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
     #   restore-keys: ${{ runner.os }}-m2
        
    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=FabianoCarneiro_150GTI
    
    - name: SonarCloud Scan
      uses: Sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} 
      with:
        args:
           -Dsonar.projectKey=FabianoCarneiro_150GTI
           -Dsonar.organization=fabianocarneiro

    - name: Get Quality Gate status
      id: sonarcloud-status
      uses: sonarsource/sonarcloud-github-action@master
      with:
        action: 'status'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Print Quality Gate status
      run: echo "Quality Gate status is ${{ steps.sonarcloud-status.outputs.status }}"
   
  publish:
    runs-on: ubuntu-latest
    needs: code-analisys   
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          package: '*.jar'
      - name: Publish package
        run: mvn --batch-mode deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}        
          
  deploy-STG:
    runs-on: ubuntu-latest
    environment:
      name: stg
    needs: publish
    
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Deploy 
        shell: bash
        run: |
          echo "Deploy STG"
          
    
  deploy-Pre:
    runs-on: ubuntu-latest
    env: 
      NEEDCUSTOM : publish

    if: github.ref == 'refs/heads/release'
    environment:
      name: pre
    needs: publish
    steps:
      - name: Deploy 
        shell: bash
        run: |
          echo "Deploy PRE"
